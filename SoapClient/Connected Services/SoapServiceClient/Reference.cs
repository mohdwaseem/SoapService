//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapServiceClient
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexModelInput", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Models")]
    public partial class ComplexModelInput : object
    {
        
        private System.Collections.Generic.List<SoapServiceClient.ComplexObject> ComplexListPropertyField;
        
        private System.DateTimeOffset DateTimeOffsetPropertyField;
        
        private int IntPropertyField;
        
        private System.Collections.Generic.List<string> ListPropertyField;
        
        private string StringPropertyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SoapServiceClient.ComplexObject> ComplexListProperty
        {
            get
            {
                return this.ComplexListPropertyField;
            }
            set
            {
                this.ComplexListPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DateTimeOffsetProperty
        {
            get
            {
                return this.DateTimeOffsetPropertyField;
            }
            set
            {
                this.DateTimeOffsetPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntProperty
        {
            get
            {
                return this.IntPropertyField;
            }
            set
            {
                this.IntPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ListProperty
        {
            get
            {
                return this.ListPropertyField;
            }
            set
            {
                this.ListPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringProperty
        {
            get
            {
                return this.StringPropertyField;
            }
            set
            {
                this.StringPropertyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexObject", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Models")]
    public partial class ComplexObject : object
    {
        
        private int IntPropertyField;
        
        private string StringPropertyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntProperty
        {
            get
            {
                return this.IntPropertyField;
            }
            set
            {
                this.IntPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringProperty
        {
            get
            {
                return this.StringPropertyField;
            }
            set
            {
                this.StringPropertyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexModelResponse", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Models")]
    public partial class ComplexModelResponse : object
    {
        
        private System.DateTimeOffset DateTimeOffsetPropertyField;
        
        private float FloatPropertyField;
        
        private System.Collections.Generic.List<string> ListPropertyField;
        
        private string StringPropertyField;
        
        private SoapServiceClient.TestEnum TestEnumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DateTimeOffsetProperty
        {
            get
            {
                return this.DateTimeOffsetPropertyField;
            }
            set
            {
                this.DateTimeOffsetPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float FloatProperty
        {
            get
            {
                return this.FloatPropertyField;
            }
            set
            {
                this.FloatPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> ListProperty
        {
            get
            {
                return this.ListPropertyField;
            }
            set
            {
                this.ListPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringProperty
        {
            get
            {
                return this.StringPropertyField;
            }
            set
            {
                this.StringPropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public SoapServiceClient.TestEnum TestEnum
        {
            get
            {
                return this.TestEnumField;
            }
            set
            {
                this.TestEnumField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestEnum", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Models")]
    public enum TestEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        One = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoapServiceClient.ISampleService")]
    public interface ISampleService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/Ping", ReplyAction="http://tempuri.org/ISampleService/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/PingComplexModel", ReplyAction="http://tempuri.org/ISampleService/PingComplexModelResponse")]
        System.Threading.Tasks.Task<SoapServiceClient.ComplexModelResponse> PingComplexModelAsync(SoapServiceClient.ComplexModelInput inputModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/VoidMethod", ReplyAction="http://tempuri.org/ISampleService/VoidMethodResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="s")]
        System.Threading.Tasks.Task<string> VoidMethodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/AsyncMethod", ReplyAction="http://tempuri.org/ISampleService/AsyncMethodResponse")]
        System.Threading.Tasks.Task<int> AsyncMethodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/NullableMethod", ReplyAction="http://tempuri.org/ISampleService/NullableMethodResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> NullableMethodAsync(System.Nullable<bool> arg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleService/XmlMethod", ReplyAction="http://tempuri.org/ISampleService/XmlMethodResponse")]
        System.Threading.Tasks.Task XmlMethodAsync(System.Xml.XmlElement xml);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ISampleServiceChannel : SoapServiceClient.ISampleService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class SampleServiceClient : System.ServiceModel.ClientBase<SoapServiceClient.ISampleService>, SoapServiceClient.ISampleService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SampleServiceClient() : 
                base(SampleServiceClient.GetDefaultBinding(), SampleServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SampleServiceClient.GetBindingForEndpoint(endpointConfiguration), SampleServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SampleServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SampleServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> PingAsync(string s)
        {
            return base.Channel.PingAsync(s);
        }
        
        public System.Threading.Tasks.Task<SoapServiceClient.ComplexModelResponse> PingComplexModelAsync(SoapServiceClient.ComplexModelInput inputModel)
        {
            return base.Channel.PingComplexModelAsync(inputModel);
        }
        
        public System.Threading.Tasks.Task<string> VoidMethodAsync()
        {
            return base.Channel.VoidMethodAsync();
        }
        
        public System.Threading.Tasks.Task<int> AsyncMethodAsync()
        {
            return base.Channel.AsyncMethodAsync();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> NullableMethodAsync(System.Nullable<bool> arg)
        {
            return base.Channel.NullableMethodAsync(arg);
        }
        
        public System.Threading.Tasks.Task XmlMethodAsync(System.Xml.XmlElement xml)
        {
            return base.Channel.XmlMethodAsync(xml);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:5000/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SampleServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SampleServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding,
        }
    }
}
